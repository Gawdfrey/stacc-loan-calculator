{"ast":null,"code":"export default function (req, res) {\n  if (req.method !== \"POST\") {\n    return res.status(405).end();\n  }\n\n  const {\n    laanebelop,\n    nominellRente,\n    terminGebyr,\n    utlopsDato,\n    saldoDato,\n    datoForsteInnbetaling,\n    ukjentVerdi\n  } = req.body;\n  var h = {\n    \"nedbetalingsplan\": {\n      \"innbetalinger\": [{\n        \"restgjeld\": laanebelop,\n        \"dato\": saldoDato,\n        \"innbetaling\": 0.0,\n        \"gebyr\": 0.0,\n        \"renter\": 0.0,\n        \"total\": 0.0\n      }]\n    }\n  };\n  const datoDiff = monthsDiff(datoForsteInnbetaling, utlopsDato);\n  var restgjeld = laanebelop;\n  var rente = laanebelop * (nominellRente / 100 / datoDiff);\n  var dato = new Date(datoForsteInnbetaling);\n  var td = nominellRente / 100 / datoDiff / (1 - Math.pow(1 + nominellRente / 100 / datoDiff, -datoDiff)) * laanebelop;\n\n  for (var i = 0; i <= datoDiff; i++) {\n    rente = restgjeld * (nominellRente / 100 / datoDiff);\n    var avdrag = td - rente;\n    restgjeld -= avdrag;\n    h.nedbetalingsplan.innbetalinger.push({\n      \"restgjeld\": Math.round(restgjeld),\n      \"dato\": dato.toISOString().substring(0, 10),\n      \"innbetaling\": Math.round(avdrag),\n      \"gebyr\": terminGebyr,\n      \"renter\": Math.round(rente),\n      \"total\": Math.round(td + terminGebyr)\n    });\n    dato.setMonth(dato.getMonth() + 1, 1);\n  }\n\n  h.nedbetalingsplan.innbetalinger.pop();\n  res.status(200).json(h);\n}\n\nfunction yearsDiff(d1, d2) {\n  let date1 = new Date(d1);\n  let date2 = new Date(d2);\n  let yearsDiff = date2.getFullYear() - date1.getFullYear();\n  return yearsDiff;\n}\n\nfunction monthsDiff(d1, d2) {\n  let date1 = new Date(d1);\n  let date2 = new Date(d2);\n  let years = yearsDiff(d1, d2);\n  let months = years * 12 + (date2.getMonth() - date1.getMonth());\n  return months;\n}","map":{"version":3,"sources":["D:/git/nextjs/pages/api/Annuitetslaan.js"],"names":["req","res","method","status","end","laanebelop","nominellRente","terminGebyr","utlopsDato","saldoDato","datoForsteInnbetaling","ukjentVerdi","body","h","datoDiff","monthsDiff","restgjeld","rente","dato","Date","td","Math","pow","i","avdrag","nedbetalingsplan","innbetalinger","push","round","toISOString","substring","setMonth","getMonth","pop","json","yearsDiff","d1","d2","date1","date2","getFullYear","years","months"],"mappings":"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","sourcesContent":["export default function (req, res) {\r\n    if (req.method !== \"POST\") {\r\n      return res.status(405).end();\r\n    }\r\n    const {\r\n      laanebelop,\r\n      nominellRente,\r\n      terminGebyr,\r\n      utlopsDato,\r\n      saldoDato,\r\n      datoForsteInnbetaling,\r\n      ukjentVerdi,\r\n    } = req.body;\r\n    \r\n    var h = {\r\n    \"nedbetalingsplan\": {\r\n      \"innbetalinger\": [\r\n      {\r\n      \t\"restgjeld\": laanebelop,\r\n        \"dato\": saldoDato,\r\n        \"innbetaling\": 0.0,\r\n        \"gebyr\": 0.0,\r\n        \"renter\": 0.0,\r\n        \"total\": 0.0\r\n      }\r\n      ]\r\n    },\r\n  }\r\n  const datoDiff = monthsDiff(datoForsteInnbetaling, utlopsDato)\r\n  var restgjeld = laanebelop\r\n  var rente = laanebelop * (nominellRente / 100 / datoDiff)\r\n  var dato = new Date(datoForsteInnbetaling)\r\n  var td = ((nominellRente / 100 / datoDiff) / (1 - Math.pow(1 + (nominellRente / 100 / datoDiff), -datoDiff))* laanebelop)\r\n  for (var i = 0; i<=datoDiff; i++) {\r\n  \trente = restgjeld * (nominellRente / 100 / datoDiff)\r\n    var avdrag = td - rente\r\n    restgjeld -= avdrag\r\n    h.nedbetalingsplan.innbetalinger.push(\r\n    {\r\n      \"restgjeld\": Math.round(restgjeld),\r\n      \"dato\": dato.toISOString().substring(0, 10),\r\n      \"innbetaling\": Math.round(avdrag),\r\n      \"gebyr\": terminGebyr,\r\n      \"renter\": Math.round(rente),\r\n      \"total\": Math.round(td + terminGebyr),\r\n    }\r\n    )\r\n    dato.setMonth(dato.getMonth() + 1, 1)\r\n  }\r\n  h.nedbetalingsplan.innbetalinger.pop()\r\n    res.status(200).json(h);\r\n  }\r\n  \r\n  function yearsDiff(d1, d2) {\r\n    let date1 = new Date(d1);\r\n    let date2 = new Date(d2);\r\n    let yearsDiff = date2.getFullYear() - date1.getFullYear();\r\n    return yearsDiff;\r\n  }\r\n  \r\n  function monthsDiff(d1, d2) {\r\n    let date1 = new Date(d1);\r\n    let date2 = new Date(d2);\r\n    let years = yearsDiff(d1, d2);\r\n    let months = years * 12 + (date2.getMonth() - date1.getMonth());\r\n    return months;\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}