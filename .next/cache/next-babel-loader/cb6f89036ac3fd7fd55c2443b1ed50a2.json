{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\git\\\\nextjs\\\\components\\\\Chart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\n\nvar Chart = /*#__PURE__*/function (_React$Component) {\n  _inherits(Chart, _React$Component);\n\n  var _super = _createSuper(Chart);\n\n  function Chart() {\n    _classCallCheck(this, Chart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      var response = this.props.response;\n      var array = [];\n\n      if (response != null) {\n        response.nedbetalingsplan.innbetalinger.map(function (row, index) {\n          array.push({\n            dato: row.dato,\n            innbetaling: Math.round(row.innbetaling),\n            renter: Math.round(row.renter)\n          });\n          return array;\n        });\n      }\n\n      return /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 600,\n        height: 300,\n        data: array,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"dato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"innbetaling\",\n          stackId: \"a\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"renter\",\n          stackId: \"a\",\n          fill: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Chart;\n}(React.Component);\n\nexport default Chart;","map":{"version":3,"sources":["D:/git/nextjs/components/Chart.js"],"names":["React","Component","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Chart","response","props","array","nedbetalingsplan","innbetalinger","map","row","index","push","dato","innbetaling","Math","round","renter","top","right","left","bottom"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,QADF,EAEEC,GAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,aALF,EAMEC,OANF,EAOEC,MAPF,QAQO,UARP;;IAUMC,K;;;;;;;;;;;;;6BACK;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAEP,UAAME,KAAK,GAAG,EAAd;;AACA,UAAIF,QAAQ,IAAI,IAAhB,EAAsB;AACpBA,QAAAA,QAAQ,CAACG,gBAAT,CAA0BC,aAA1B,CAAwCC,GAAxC,CAA4C,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC1DL,UAAAA,KAAK,CAACM,IAAN,CAAW;AACTC,YAAAA,IAAI,EAAEH,GAAG,CAACG,IADD;AAETC,YAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACI,WAAf,CAFJ;AAGTG,YAAAA,MAAM,EAAEF,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACO,MAAf;AAHC,WAAX;AAKA,iBAAOX,KAAP;AACD,SAPD;AAQD;;AACD,0BACE,QAAC,QAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,IAAI,EAAEA,KAHR;AAIE,QAAA,MAAM,EAAE;AAAEY,UAAAA,GAAG,EAAE,EAAP;AAAWC,UAAAA,KAAK,EAAE,EAAlB;AAAsBC,UAAAA,IAAI,EAAE,EAA5B;AAAgCC,UAAAA,MAAM,EAAE;AAAxC,SAJV;AAAA,gCAME,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,aAAD;AAAe,UAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,aAAb;AAA2B,UAAA,OAAO,EAAC,GAAnC;AAAuC,UAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,GAA9B;AAAkC,UAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAgBD;;;;EA9BiB3B,KAAK,CAACC,S;;AAiC1B,eAAeQ,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nclass Chart extends React.Component {\r\n  render() {\r\n    const { response } = this.props;\r\n    const array = [];\r\n    if (response != null) {\r\n      response.nedbetalingsplan.innbetalinger.map((row, index) => {\r\n        array.push({\r\n          dato: row.dato,\r\n          innbetaling: Math.round(row.innbetaling),\r\n          renter: Math.round(row.renter),\r\n        });\r\n        return array;\r\n      });\r\n    }\r\n    return (\r\n      <BarChart\r\n        width={600}\r\n        height={300}\r\n        data={array}\r\n        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n      >\r\n        <XAxis dataKey=\"dato\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"innbetaling\" stackId=\"a\" fill=\"#8884d8\" />\r\n        <Bar dataKey=\"renter\" stackId=\"a\" fill=\"#82ca9d\" />\r\n      </BarChart>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}