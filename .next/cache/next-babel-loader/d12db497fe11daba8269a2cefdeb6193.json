{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\git\\\\nextjs\\\\components\\\\Table.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\n\nvar Table3 = /*#__PURE__*/function (_Component) {\n  _inherits(Table3, _Component);\n\n  var _super = _createSuper(Table3);\n\n  function Table3() {\n    _classCallCheck(this, Table3);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Table3, [{\n    key: \"render\",\n    value: function render() {\n      var response = this.props.response;\n      var array = [];\n\n      if (response != null) {\n        response.nedbetalingsplan.innbetalinger.map(function (row, index) {\n          array.push({\n            dato: row.dato,\n            innbetaling: Math.round(row.innbetaling) + \"  NOK\",\n            gebyr: Math.round(row.gebyr) + \"  NOK\",\n            renter: Math.round(row.renter) + \"  NOK\",\n            restgjeld: Math.round(row.restgjeld) + \"  NOK\",\n            total: Math.round(row.total) + \"  NOK\"\n          });\n          return array;\n        });\n      }\n\n      var data = {\n        columns: [{\n          label: \"Dato\",\n          field: \"dato\",\n          sort: \"disabled\",\n          width: 150\n        }, {\n          label: \"Innbetaling\",\n          field: \"innbetaling\",\n          sort: \"disabled\",\n          width: 270\n        }, {\n          label: \"Gebyr\",\n          field: \"gebyr\",\n          sort: \"disabled\",\n          width: 200\n        }, {\n          label: \"Renter\",\n          field: \"renter\",\n          sort: \"disabled\",\n          width: 100\n        }, {\n          label: \"Restgjeld\",\n          field: \"restgjeld\",\n          sort: \"disabled\",\n          width: 150\n        }, {\n          label: \"Terminkostnad\",\n          field: \"total\",\n          sort: \"disabled\",\n          width: 100\n        }],\n        rows: array\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MDBDataTable, {\n          entriesOptions: [12],\n          striped: true,\n          bordered: true,\n          hover: true,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Table3;\n}(Component);\n\nexport default Table3;","map":{"version":3,"sources":["D:/git/nextjs/components/Table.js"],"names":["React","Component","MDBDataTable","Table3","response","props","array","nedbetalingsplan","innbetalinger","map","row","index","push","dato","innbetaling","Math","round","gebyr","renter","restgjeld","total","data","columns","label","field","sort","width","rows"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,UAA7B;;IAEMC,M;;;;;;;;;;;;;6BACK;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAEP,UAAIE,KAAK,GAAG,EAAZ;;AACA,UAAIF,QAAQ,IAAI,IAAhB,EAAsB;AACpBA,QAAAA,QAAQ,CAACG,gBAAT,CAA0BC,aAA1B,CAAwCC,GAAxC,CAA4C,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC1DL,UAAAA,KAAK,CAACM,IAAN,CAAW;AACTC,YAAAA,IAAI,EAAEH,GAAG,CAACG,IADD;AAETC,YAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACI,WAAf,IAA8B,OAFlC;AAGTG,YAAAA,KAAK,EAAEF,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACO,KAAf,IAAwB,OAHtB;AAITC,YAAAA,MAAM,EAAEH,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACQ,MAAf,IAAyB,OAJxB;AAKTC,YAAAA,SAAS,EAAEJ,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACS,SAAf,IAA4B,OAL9B;AAMTC,YAAAA,KAAK,EAAEL,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACU,KAAf,IAAwB;AANtB,WAAX;AAQA,iBAAOd,KAAP;AACD,SAVD;AAWD;;AACD,UAAMe,IAAI,GAAG;AACXC,QAAAA,OAAO,EAAE,CACP;AACEC,UAAAA,KAAK,EAAE,MADT;AAEEC,UAAAA,KAAK,EAAE,MAFT;AAGEC,UAAAA,IAAI,EAAE,UAHR;AAIEC,UAAAA,KAAK,EAAE;AAJT,SADO,EAOP;AACEH,UAAAA,KAAK,EAAE,aADT;AAEEC,UAAAA,KAAK,EAAE,aAFT;AAGEC,UAAAA,IAAI,EAAE,UAHR;AAIEC,UAAAA,KAAK,EAAE;AAJT,SAPO,EAaP;AACEH,UAAAA,KAAK,EAAE,OADT;AAEEC,UAAAA,KAAK,EAAE,OAFT;AAGEC,UAAAA,IAAI,EAAE,UAHR;AAIEC,UAAAA,KAAK,EAAE;AAJT,SAbO,EAmBP;AACEH,UAAAA,KAAK,EAAE,QADT;AAEEC,UAAAA,KAAK,EAAE,QAFT;AAGEC,UAAAA,IAAI,EAAE,UAHR;AAIEC,UAAAA,KAAK,EAAE;AAJT,SAnBO,EAyBP;AACEH,UAAAA,KAAK,EAAE,WADT;AAEEC,UAAAA,KAAK,EAAE,WAFT;AAGEC,UAAAA,IAAI,EAAE,UAHR;AAIEC,UAAAA,KAAK,EAAE;AAJT,SAzBO,EA+BP;AACEH,UAAAA,KAAK,EAAE,eADT;AAEEC,UAAAA,KAAK,EAAE,OAFT;AAGEC,UAAAA,IAAI,EAAE,UAHR;AAIEC,UAAAA,KAAK,EAAE;AAJT,SA/BO,CADE;AAuCXC,QAAAA,IAAI,EAAErB;AAvCK,OAAb;AA0CA,0BACE;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,cAAc,EAAE,CAAC,EAAD,CADlB;AAEE,UAAA,OAAO,MAFT;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,KAAK,MAJP;AAKE,UAAA,IAAI,EAAEe;AALR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;;;;EAtEkBpB,S;;AAyErB,eAAeE,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\n\r\nclass Table3 extends Component {\r\n  render() {\r\n    const { response } = this.props;\r\n    var array = [];\r\n    if (response != null) {\r\n      response.nedbetalingsplan.innbetalinger.map((row, index) => {\r\n        array.push({\r\n          dato: row.dato,\r\n          innbetaling: Math.round(row.innbetaling) + \"  NOK\",\r\n          gebyr: Math.round(row.gebyr) + \"  NOK\",\r\n          renter: Math.round(row.renter) + \"  NOK\",\r\n          restgjeld: Math.round(row.restgjeld) + \"  NOK\",\r\n          total: Math.round(row.total) + \"  NOK\",\r\n        });\r\n        return array;\r\n      });\r\n    }\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: \"Dato\",\r\n          field: \"dato\",\r\n          sort: \"disabled\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"Innbetaling\",\r\n          field: \"innbetaling\",\r\n          sort: \"disabled\",\r\n          width: 270,\r\n        },\r\n        {\r\n          label: \"Gebyr\",\r\n          field: \"gebyr\",\r\n          sort: \"disabled\",\r\n          width: 200,\r\n        },\r\n        {\r\n          label: \"Renter\",\r\n          field: \"renter\",\r\n          sort: \"disabled\",\r\n          width: 100,\r\n        },\r\n        {\r\n          label: \"Restgjeld\",\r\n          field: \"restgjeld\",\r\n          sort: \"disabled\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"Terminkostnad\",\r\n          field: \"total\",\r\n          sort: \"disabled\",\r\n          width: 100,\r\n        },\r\n      ],\r\n      rows: array,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <MDBDataTable\r\n          entriesOptions={[12]}\r\n          striped\r\n          bordered\r\n          hover\r\n          data={data}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table3;\r\n"]},"metadata":{},"sourceType":"module"}