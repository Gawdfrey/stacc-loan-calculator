{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\git\\\\nextjs\\\\components\\\\Sum.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\n\nvar Sum = /*#__PURE__*/function (_React$Component) {\n  _inherits(Sum, _React$Component);\n\n  var _super = _createSuper(Sum);\n\n  function Sum() {\n    _classCallCheck(this, Sum);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Sum, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          response = _this$props.response,\n          response2 = _this$props.response2,\n          response3 = _this$props.response3;\n      var sum = 0;\n\n      if (response != null) {\n        response.nedbetalingsplan.innbetalinger.map(function (row) {\n          sum += row.total;\n        });\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: sum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Sum;\n}(React.Component);\n\nexport default Sum;","map":{"version":3,"sources":["D:/git/nextjs/components/Sum.js"],"names":["React","Sum","props","response","response2","response3","sum","nedbetalingsplan","innbetalinger","map","row","total","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,G;;;;;;;;;;;;;6BACK;AAAA,wBACoC,KAAKC,KADzC;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,SADX,eACWA,SADX;AAAA,UACsBC,SADtB,eACsBA,SADtB;AAEP,UAAIC,GAAG,GAAG,CAAV;;AACA,UAAIH,QAAQ,IAAI,IAAhB,EAAsB;AACpBA,QAAAA,QAAQ,CAACI,gBAAT,CAA0BC,aAA1B,CAAwCC,GAAxC,CAA4C,UAACC,GAAD,EAAS;AACnDJ,UAAAA,GAAG,IAAII,GAAG,CAACC,KAAX;AACD,SAFD;AAGD;;AACD,0BACE;AAAA,kBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;;;EAZeN,KAAK,CAACY,S;;AAexB,eAAeX,GAAf","sourcesContent":["import React from \"react\";\r\n\r\nclass Sum extends React.Component {\r\n  render() {\r\n    const { response, response2, response3 } = this.props;\r\n    var sum = 0\r\n    if (response != null) {\r\n      response.nedbetalingsplan.innbetalinger.map((row) => {\r\n        sum += row.total\r\n      });\r\n    }\r\n    return (\r\n      <h1>{sum}</h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sum;"]},"metadata":{},"sourceType":"module"}