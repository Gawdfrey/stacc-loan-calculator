{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\git\\\\nextjs\\\\components\\\\Table.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\n\nvar TableBody = function TableBody(props) {\n  console.log(props.response.nedbetalingsplan.innbetalinger);\n\n  if (props.response == null) {\n    var rows = /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"No values are input yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, _this)\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, _this);\n\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, _this);\n  } else {\n    var _rows = props.response.nedbetalingsplan.innbetalinger.map(function (row, index) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.dato\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: Math.round(row.innbetaling) + \"  NOK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: Math.round(row.gebyr) + \"  NOK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: Math.round(row.renter) + \"  NOK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: Math.round(row.restgjeld) + \"  NOK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: Math.round(row.total) + \"  NOK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, _this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, _this);\n    });\n\n    return _rows;\n  }\n};\n\n_c = TableBody;\n\nvar Table3 = /*#__PURE__*/function (_Component) {\n  _inherits(Table3, _Component);\n\n  var _super = _createSuper(Table3);\n\n  function Table3() {\n    _classCallCheck(this, Table3);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Table3, [{\n    key: \"render\",\n    value: function render() {\n      var response = this.props.response;\n      var data = {\n        columns: [{\n          label: \"Dato\",\n          field: \"dato\",\n          sort: \"asc\",\n          width: 150\n        }, {\n          label: \"Innbetaling\",\n          field: \"innbetaling\",\n          sort: \"asc\",\n          width: 270\n        }, {\n          label: \"Gebyr\",\n          field: \"gebyr\",\n          sort: \"asc\",\n          width: 200\n        }, {\n          label: \"Renter\",\n          field: \"renter\",\n          sort: \"asc\",\n          width: 100\n        }, {\n          label: \"Restgjeld\",\n          field: \"restgjeld\",\n          sort: \"asc\",\n          width: 150\n        }, {\n          label: \"Terminkostnad\",\n          field: \"total\",\n          sort: \"asc\",\n          width: 100\n        }],\n        rows: [/*#__PURE__*/_jsxDEV(TableBody, {\n          response: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MDBDataTable, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Table3;\n}(Component);\n\nexport default Table3;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableBody\");","map":{"version":3,"sources":["D:/git/nextjs/components/Table.js"],"names":["React","Component","MDBDataTable","TableBody","props","console","log","response","nedbetalingsplan","innbetalinger","rows","map","row","index","dato","Math","round","innbetaling","gebyr","renter","restgjeld","total","Table3","data","columns","label","field","sort","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\n\r\nconst TableBody = (props) => {\r\n    console.log(props.response.nedbetalingsplan.innbetalinger)\r\n  if (props.response == null) {\r\n    const rows = (\r\n      <tr key={1}>\r\n        <td>No values are input yet!</td>\r\n      </tr>\r\n    );\r\n    return <tbody>{rows}</tbody>;\r\n  } else {\r\n    const rows = props.response.nedbetalingsplan.innbetalinger.map(\r\n      (row, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <td>{row.dato}</td>\r\n            <td>{Math.round(row.innbetaling) + \"  NOK\"}</td>\r\n            <td>{Math.round(row.gebyr) + \"  NOK\"}</td>\r\n            <td>{Math.round(row.renter) + \"  NOK\"}</td>\r\n            <td>{Math.round(row.restgjeld) + \"  NOK\"}</td>\r\n            <td>{Math.round(row.total) + \"  NOK\"}</td>\r\n          </tr>\r\n        );\r\n      }\r\n    );\r\n\r\n    return rows\r\n  }\r\n};\r\n\r\nclass Table3 extends Component {\r\n  render() {\r\n    const { response } = this.props;\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: \"Dato\",\r\n          field: \"dato\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"Innbetaling\",\r\n          field: \"innbetaling\",\r\n          sort: \"asc\",\r\n          width: 270,\r\n        },\r\n        {\r\n          label: \"Gebyr\",\r\n          field: \"gebyr\",\r\n          sort: \"asc\",\r\n          width: 200,\r\n        },\r\n        {\r\n          label: \"Renter\",\r\n          field: \"renter\",\r\n          sort: \"asc\",\r\n          width: 100,\r\n        },\r\n        {\r\n          label: \"Restgjeld\",\r\n          field: \"restgjeld\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"Terminkostnad\",\r\n          field: \"total\",\r\n          sort: \"asc\",\r\n          width: 100,\r\n        },\r\n      ],\r\n      rows: [\r\n        <TableBody response={response} />\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <MDBDataTable\r\n          striped\r\n          bordered\r\n          hover\r\n          data={data}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Table3;\r\n"]},"metadata":{},"sourceType":"module"}