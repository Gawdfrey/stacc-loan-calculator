{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\git\\\\nextjs\\\\services\\\\sendRequest.js\";\nvar api_url = \"https://visningsrom.stacc.com/dd_server_laaneberegning/rest/laaneberegning/v1/nedbetalingsplan\";\n\nfunction sendRequest(_x) {\n  return _sendRequest.apply(this, arguments);\n}\n\nfunction _sendRequest() {\n  _sendRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(json) {\n    var _this = this;\n\n    var res, data, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(api_url, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(json)\n            });\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            result = data.map(function (entry, index) {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: entry\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 15,\n                columnNumber: 16\n              }, _this);\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _sendRequest.apply(this, arguments);\n}\n\nexport default sendRequest;","map":{"version":3,"sources":["D:/git/nextjs/services/sendRequest.js"],"names":["api_url","sendRequest","json","fetch","method","headers","body","JSON","stringify","res","data","result","map","entry","index"],"mappings":";;;;AAAA,IAAMA,OAAO,GAAG,gGAAhB;;SAEeC,W;;;;;0EAAf,iBAA2BC,IAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACsBC,KAAK,CAACH,OAAD,EAAU;AAC7BI,cAAAA,MAAM,EAAE,MADqB;AAE7BC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAFoB;AAK7BC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACFN,IADE;AALuB,aAAV,CAD3B;;AAAA;AACUO,YAAAA,GADV;AAAA;AAAA,mBAUuBA,GAAG,CAACP,IAAJ,EAVvB;;AAAA;AAUUQ,YAAAA,IAVV;AAWUC,YAAAA,MAXV,GAWmBD,IAAI,CAACE,GAAL,CAAS,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACtC,kCAAO;AAAA,0BAAiBD;AAAjB,iBAASC,KAAT;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD,aAFY,CAXnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgBA,eAAeb,WAAf","sourcesContent":["const api_url = \"https://visningsrom.stacc.com/dd_server_laaneberegning/rest/laaneberegning/v1/nedbetalingsplan\"\r\n\r\nasync function sendRequest(json) {\r\n    const res = await fetch(api_url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(\r\n            json\r\n        )\r\n    })\r\n    const data = await res.json()\r\n    const result = data.map((entry, index) => {\r\n        return <li key={index}>{entry}</li>\r\n      })\r\n}\r\n\r\nexport default sendRequest"]},"metadata":{},"sourceType":"module"}