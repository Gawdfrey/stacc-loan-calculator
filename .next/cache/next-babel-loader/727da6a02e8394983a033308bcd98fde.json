{"ast":null,"code":"export default function (req, res) {\n  if (req.method !== \"POST\") {\n    return res.status(405).end();\n  }\n\n  const {\n    laaneBelop,\n    nominellRente,\n    terminGebyr,\n    utlopsDato,\n    saldoDato,\n    datoForsteInnbetaling,\n    ukjentVerdi\n  } = req.body;\n  var h = {\n    \"nedbetalingsplan\": {\n      \"nedbetalinger\": [{\n        \"restgjeld\": laaneBelop,\n        \"dato\": saldoDato,\n        \"innbetaling\": 0.0,\n        \"gebyr\": 0.0,\n        \"renter\": 0.0,\n        \"total\": 0.0\n      }]\n    }\n  };\n  const datoDiff = monthsDiff(datoForsteInnbetaling, utlopsDato);\n  var restgjeld = laaneBelop;\n  var rente = laaneBelop * (nominellRente / 100 / datoDiff);\n  var dato = new Date(datoForsteInnbetaling);\n  var avdrag = laaneBelop / datoDiff;\n  var i;\n\n  for (i = 0; i <= datoDiff; i++) {\n    rente = restgjeld * (nominellRente / 100 / datoDiff);\n    restgjeld -= avdrag;\n    h.nedbetalingsplan.nedbetalinger.push({\n      \"restgjeld\": Math.round(restgjeld),\n      \"dato\": dato.toISOString().substring(0, 10),\n      \"innbetaling\": Math.round(avdrag),\n      \"gebyr\": terminGebyr,\n      \"renter\": Math.round(rente),\n      \"total\": Math.round(avdrag + rente + terminGebyr)\n    });\n    dato.setMonth(dato.getMonth() + 1, 1);\n  }\n\n  h.nedbetalingsplan.nedbetalinger.pop();\n  res.status(200).json(h);\n}\n\nfunction yearsDiff(d1, d2) {\n  let date1 = new Date(d1);\n  let date2 = new Date(d2);\n  let yearsDiff = date2.getFullYear() - date1.getFullYear();\n  return yearsDiff;\n}\n\nfunction monthsDiff(d1, d2) {\n  let date1 = new Date(d1);\n  let date2 = new Date(d2);\n  let years = yearsDiff(d1, d2);\n  let months = years * 12 + (date2.getMonth() - date1.getMonth());\n  return months;\n}","map":{"version":3,"sources":["D:/git/nextjs/pages/api/Serielaan.js"],"names":["req","res","method","status","end","laaneBelop","nominellRente","terminGebyr","utlopsDato","saldoDato","datoForsteInnbetaling","ukjentVerdi","body","h","datoDiff","monthsDiff","restgjeld","rente","dato","Date","avdrag","i","nedbetalingsplan","nedbetalinger","push","Math","round","toISOString","substring","setMonth","getMonth","pop","json","yearsDiff","d1","d2","date1","date2","getFullYear","years","months"],"mappings":"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","sourcesContent":["export default function (req, res) {\r\n  if (req.method !== \"POST\") {\r\n    return res.status(405).end();\r\n  }\r\n  const {\r\n    laaneBelop,\r\n    nominellRente,\r\n    terminGebyr,\r\n    utlopsDato,\r\n    saldoDato,\r\n    datoForsteInnbetaling,\r\n    ukjentVerdi,\r\n  } = req.body;\r\n\r\n  var h = {\r\n    \"nedbetalingsplan\": {\r\n      \"nedbetalinger\": [\r\n      {\r\n      \t\"restgjeld\": laaneBelop,\r\n        \"dato\": saldoDato,\r\n        \"innbetaling\": 0.0,\r\n        \"gebyr\": 0.0,\r\n        \"renter\": 0.0,\r\n        \"total\": 0.0\r\n      }\r\n      ]\r\n    }\r\n  }\r\n  const datoDiff = monthsDiff(datoForsteInnbetaling, utlopsDato)\r\n  var restgjeld = laaneBelop\r\n  var rente = laaneBelop * (nominellRente / 100 / datoDiff)\r\n  var dato = new Date(datoForsteInnbetaling)\r\n  var avdrag = laaneBelop / datoDiff\r\n  var i;\r\n  for (i = 0; i<=datoDiff; i++) {\r\n  \trente = restgjeld * (nominellRente / 100 / datoDiff)\r\n    restgjeld -= avdrag\r\n    h.nedbetalingsplan.nedbetalinger.push(\r\n    {\r\n    \t\"restgjeld\": Math.round(restgjeld),\r\n      \"dato\": dato.toISOString().substring(0, 10),\r\n      \"innbetaling\": Math.round(avdrag),\r\n      \"gebyr\": terminGebyr,\r\n      \"renter\": Math.round(rente),\r\n      \"total\": Math.round(avdrag + rente + terminGebyr),\r\n    }\r\n    )\r\n    dato.setMonth(dato.getMonth() + 1, 1)\r\n  }\r\n  h.nedbetalingsplan.nedbetalinger.pop()\r\n  res.status(200).json(h);\r\n}\r\n\r\nfunction yearsDiff(d1, d2) {\r\n  let date1 = new Date(d1);\r\n  let date2 = new Date(d2);\r\n  let yearsDiff = date2.getFullYear() - date1.getFullYear();\r\n  return yearsDiff;\r\n}\r\n\r\nfunction monthsDiff(d1, d2) {\r\n  let date1 = new Date(d1);\r\n  let date2 = new Date(d2);\r\n  let years = yearsDiff(d1, d2);\r\n  let months = years * 12 + (date2.getMonth() - date1.getMonth());\r\n  return months;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}