{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\git\\\\nextjs\\\\components\\\\Table.js\";\nimport React, { Component } from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\n\nconst TableBody = props => {\n  if (props.response == null) {\n    const rows = /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"No values are input yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  } else {\n    const rows = props.response.nedbetalingsplan.innbetalinger.map((row, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.dato\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: Math.round(row.innbetaling) + \"  NOK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: Math.round(row.gebyr) + \"  NOK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: Math.round(row.renter) + \"  NOK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: Math.round(row.restgjeld) + \"  NOK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: Math.round(row.total) + \"  NOK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n};\n\nclass Table extends Component {\n  render() {\n    const {\n      response\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tabell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered table-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Dato\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Innbetaling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Gebyr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Renter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Restgjeld\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Terminkostnad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          response: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Table3 extends Component {\n  render() {\n    const {\n      response\n    } = this.props;\n    const data = {\n      columns: [{\n        label: \"Name\",\n        field: \"name\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"Position\",\n        field: \"position\",\n        sort: \"asc\",\n        width: 270\n      }, {\n        label: \"Office\",\n        field: \"office\",\n        sort: \"asc\",\n        width: 200\n      }, {\n        label: \"Age\",\n        field: \"age\",\n        sort: \"asc\",\n        width: 100\n      }, {\n        label: \"Start date\",\n        field: \"date\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"Salary\",\n        field: \"salary\",\n        sort: \"asc\",\n        width: 100\n      }],\n      rows: [{\n        name: \"Tiger Nixon\",\n        position: \"System Architect\",\n        office: \"Edinburgh\",\n        age: \"61\",\n        date: \"2011/04/25\",\n        salary: \"$320\"\n      }, {\n        name: 'Garrett Winters',\n        position: 'Accountant',\n        office: 'Tokyo',\n        age: '63',\n        date: '2011/07/25',\n        salary: '$170'\n      }, {\n        name: 'Ashton Cox',\n        position: 'Junior Technical Author',\n        office: 'San Francisco',\n        age: '66',\n        date: '2009/01/12',\n        salary: '$86'\n      }, {\n        name: 'Cedric Kelly',\n        position: 'Senior Javascript Developer',\n        office: 'Edinburgh',\n        age: '22',\n        date: '2012/03/29',\n        salary: '$433'\n      }, {\n        name: 'Airi Satou',\n        position: 'Accountant',\n        office: 'Tokyo',\n        age: '33',\n        date: '2008/11/28',\n        salary: '$162'\n      }, {\n        name: 'Brielle Williamson',\n        position: 'Integration Specialist',\n        office: 'New York',\n        age: '61',\n        date: '2012/12/02',\n        salary: '$372'\n      }, {\n        name: 'Herrod Chandler',\n        position: 'Sales Assistant',\n        office: 'San Francisco',\n        age: '59',\n        date: '2012/08/06',\n        salary: '$137'\n      }, {\n        name: 'Rhona Davidson',\n        position: 'Integration Specialist',\n        office: 'Tokyo',\n        age: '55',\n        date: '2010/10/14',\n        salary: '$327'\n      }, {\n        name: 'Colleen Hurst',\n        position: 'Javascript Developer',\n        office: 'San Francisco',\n        age: '39',\n        date: '2009/09/15',\n        salary: '$205'\n      }, {\n        name: 'Sonya Frost',\n        position: 'Software Engineer',\n        office: 'Edinburgh',\n        age: '23',\n        date: '2008/12/13',\n        salary: '$103'\n      }, {\n        name: 'Jena Gaines',\n        position: 'Office Manager',\n        office: 'London',\n        age: '30',\n        date: '2008/12/19',\n        salary: '$90'\n      }, {\n        name: 'Quinn Flynn',\n        position: 'Support Lead',\n        office: 'Edinburgh',\n        age: '22',\n        date: '2013/03/03',\n        salary: '$342'\n      }, {\n        name: 'Charde Marshall',\n        position: 'Regional Director',\n        office: 'San Francisco',\n        age: '36',\n        date: '2008/10/16',\n        salary: '$470'\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MDBDataTable, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Table2 extends Component {\n  render() {\n    const {\n      response\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MDBDataTable, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        data: /*#__PURE__*/_jsxDEV(TableBody, {\n          response: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Table3;","map":{"version":3,"sources":["D:/git/nextjs/components/Table.js"],"names":["React","Component","MDBDataTable","TableBody","props","response","rows","nedbetalingsplan","innbetalinger","map","row","index","dato","Math","round","innbetaling","gebyr","renter","restgjeld","total","Table","render","Table3","data","columns","label","field","sort","width","name","position","office","age","date","salary","Table2"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\n\r\nconst TableBody = (props) => {\r\n  if (props.response == null) {\r\n    const rows = (\r\n      <tr key={1}>\r\n        <td>No values are input yet!</td>\r\n      </tr>\r\n    );\r\n    return <tbody>{rows}</tbody>;\r\n  } else {\r\n    const rows = props.response.nedbetalingsplan.innbetalinger.map(\r\n      (row, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <td>{row.dato}</td>\r\n            <td>{Math.round(row.innbetaling) + \"  NOK\"}</td>\r\n            <td>{Math.round(row.gebyr) + \"  NOK\"}</td>\r\n            <td>{Math.round(row.renter) + \"  NOK\"}</td>\r\n            <td>{Math.round(row.restgjeld) + \"  NOK\"}</td>\r\n            <td>{Math.round(row.total) + \"  NOK\"}</td>\r\n          </tr>\r\n        );\r\n      }\r\n    );\r\n\r\n    return <tbody>{rows}</tbody>;\r\n  }\r\n};\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const { response } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Tabell</h1>\r\n        <table className=\"table table-bordered table-hover\">\r\n          <thead className=\"thead\">\r\n            <tr>\r\n              <th scope=\"col\">Dato</th>\r\n              <th scope=\"col\">Innbetaling</th>\r\n              <th scope=\"col\">Gebyr</th>\r\n              <th scope=\"col\">Renter</th>\r\n              <th scope=\"col\">Restgjeld</th>\r\n              <th scope=\"col\">Terminkostnad</th>\r\n            </tr>\r\n          </thead>\r\n          <TableBody response={response} />\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Table3 extends Component {\r\n  render() {\r\n    const { response } = this.props;\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: \"Name\",\r\n          field: \"name\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"Position\",\r\n          field: \"position\",\r\n          sort: \"asc\",\r\n          width: 270,\r\n        },\r\n        {\r\n          label: \"Office\",\r\n          field: \"office\",\r\n          sort: \"asc\",\r\n          width: 200,\r\n        },\r\n        {\r\n          label: \"Age\",\r\n          field: \"age\",\r\n          sort: \"asc\",\r\n          width: 100,\r\n        },\r\n        {\r\n          label: \"Start date\",\r\n          field: \"date\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"Salary\",\r\n          field: \"salary\",\r\n          sort: \"asc\",\r\n          width: 100,\r\n        },\r\n      ],\r\n      rows: [\r\n        {\r\n          name: \"Tiger Nixon\",\r\n          position: \"System Architect\",\r\n          office: \"Edinburgh\",\r\n          age: \"61\",\r\n          date: \"2011/04/25\",\r\n          salary: \"$320\",\r\n        },\r\n        {\r\n            name: 'Garrett Winters',\r\n            position: 'Accountant',\r\n            office: 'Tokyo',\r\n            age: '63',\r\n            date: '2011/07/25',\r\n            salary: '$170'\r\n          },\r\n          {\r\n            name: 'Ashton Cox',\r\n            position: 'Junior Technical Author',\r\n            office: 'San Francisco',\r\n            age: '66',\r\n            date: '2009/01/12',\r\n            salary: '$86'\r\n          },\r\n          {\r\n            name: 'Cedric Kelly',\r\n            position: 'Senior Javascript Developer',\r\n            office: 'Edinburgh',\r\n            age: '22',\r\n            date: '2012/03/29',\r\n            salary: '$433'\r\n          },\r\n          {\r\n            name: 'Airi Satou',\r\n            position: 'Accountant',\r\n            office: 'Tokyo',\r\n            age: '33',\r\n            date: '2008/11/28',\r\n            salary: '$162'\r\n          },\r\n          {\r\n            name: 'Brielle Williamson',\r\n            position: 'Integration Specialist',\r\n            office: 'New York',\r\n            age: '61',\r\n            date: '2012/12/02',\r\n            salary: '$372'\r\n          },\r\n          {\r\n            name: 'Herrod Chandler',\r\n            position: 'Sales Assistant',\r\n            office: 'San Francisco',\r\n            age: '59',\r\n            date: '2012/08/06',\r\n            salary: '$137'\r\n          },\r\n          {\r\n            name: 'Rhona Davidson',\r\n            position: 'Integration Specialist',\r\n            office: 'Tokyo',\r\n            age: '55',\r\n            date: '2010/10/14',\r\n            salary: '$327'\r\n          },\r\n          {\r\n            name: 'Colleen Hurst',\r\n            position: 'Javascript Developer',\r\n            office: 'San Francisco',\r\n            age: '39',\r\n            date: '2009/09/15',\r\n            salary: '$205'\r\n          },\r\n          {\r\n            name: 'Sonya Frost',\r\n            position: 'Software Engineer',\r\n            office: 'Edinburgh',\r\n            age: '23',\r\n            date: '2008/12/13',\r\n            salary: '$103'\r\n          },\r\n          {\r\n            name: 'Jena Gaines',\r\n            position: 'Office Manager',\r\n            office: 'London',\r\n            age: '30',\r\n            date: '2008/12/19',\r\n            salary: '$90'\r\n          },\r\n          {\r\n            name: 'Quinn Flynn',\r\n            position: 'Support Lead',\r\n            office: 'Edinburgh',\r\n            age: '22',\r\n            date: '2013/03/03',\r\n            salary: '$342'\r\n          },\r\n          {\r\n            name: 'Charde Marshall',\r\n            position: 'Regional Director',\r\n            office: 'San Francisco',\r\n            age: '36',\r\n            date: '2008/10/16',\r\n            salary: '$470'\r\n          },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <MDBDataTable\r\n          striped\r\n          bordered\r\n          hover\r\n          data={data}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Table2 extends Component {\r\n  render() {\r\n    const { response } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <MDBDataTable\r\n          striped\r\n          bordered\r\n          hover\r\n          data={<TableBody response={response} />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table3;\r\n"]},"metadata":{},"sourceType":"module"}