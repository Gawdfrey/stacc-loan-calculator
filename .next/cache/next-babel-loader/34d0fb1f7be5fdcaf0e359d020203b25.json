{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\git\\\\nextjs\\\\components\\\\Table.js\";\nimport React, { Component } from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\n\nconst TableBody = props => {\n  if (props.response == null) {\n    const rows = /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"No values are input yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n\n    return {\n      dato: \"hei\"\n    };\n  } else {\n    const rows = props.response.nedbetalingsplan.innbetalinger.map((row, index) => {\n      return {\n        dato: row.dato,\n        innbetaling: Math.round(row.innbetaling) + \"  NOK\",\n        gebyr: Math.round(row.gebyr) + \"  NOK\",\n        renter: Math.round(row.renter) + \"  NOK\",\n        restgjeld: Math.round(row.restgjeld) + \"  NOK\",\n        total: Math.round(row.total) + \"  NOK\"\n      };\n    });\n    console.log(rows);\n    return rows;\n  }\n};\n\nclass Table3 extends Component {\n  render() {\n    const {\n      response\n    } = this.props;\n    const r = {\n      dato: \"hei\"\n    };\n\n    if (response == null) {\n      r = {\n        dato: \"hei\"\n      };\n    } else {\n      r = response.nedbetalingsplan.innbetalinger;\n    }\n\n    const data = {\n      columns: [{\n        label: \"Dato\",\n        field: \"dato\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"Innbetaling\",\n        field: \"innbetaling\",\n        sort: \"asc\",\n        width: 270\n      }, {\n        label: \"Gebyr\",\n        field: \"gebyr\",\n        sort: \"asc\",\n        width: 200\n      }, {\n        label: \"Renter\",\n        field: \"renter\",\n        sort: \"asc\",\n        width: 100\n      }, {\n        label: \"Restgjeld\",\n        field: \"restgjeld\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"Terminkostnad\",\n        field: \"total\",\n        sort: \"asc\",\n        width: 100\n      }],\n      rows: [r]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MDBDataTable, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Table3;","map":{"version":3,"sources":["D:/git/nextjs/components/Table.js"],"names":["React","Component","MDBDataTable","TableBody","props","response","rows","dato","nedbetalingsplan","innbetalinger","map","row","index","innbetaling","Math","round","gebyr","renter","restgjeld","total","console","log","Table3","render","r","data","columns","label","field","sort","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\n\r\nconst TableBody = (props) => {\r\n  if (props.response == null) {\r\n    const rows = (\r\n      <tr key={1}>\r\n        <td>No values are input yet!</td>\r\n      </tr>\r\n    );\r\n    return {\r\n        dato: \"hei\"\r\n    }\r\n  } else {\r\n    const rows = props.response.nedbetalingsplan.innbetalinger.map(\r\n      (row, index) => {\r\n        return (\r\n          {\r\n            dato: row.dato,\r\n            innbetaling: Math.round(row.innbetaling) + \"  NOK\",\r\n            gebyr: Math.round(row.gebyr) + \"  NOK\",\r\n            renter: Math.round(row.renter) + \"  NOK\",\r\n            restgjeld: Math.round(row.restgjeld) + \"  NOK\",\r\n            total: Math.round(row.total) + \"  NOK\"\r\n          }\r\n        );\r\n      }\r\n    );\r\n    console.log(rows)\r\n    return rows\r\n  }\r\n};\r\n\r\nclass Table3 extends Component {\r\n  render() {\r\n    const { response } = this.props;\r\n    const r = {\r\n        dato: \"hei\"\r\n    }\r\n    if (response == null) {\r\n        r = {\r\n            dato: \"hei\"\r\n        }\r\n    } else {\r\n        r = response.nedbetalingsplan.innbetalinger\r\n    }\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: \"Dato\",\r\n          field: \"dato\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"Innbetaling\",\r\n          field: \"innbetaling\",\r\n          sort: \"asc\",\r\n          width: 270,\r\n        },\r\n        {\r\n          label: \"Gebyr\",\r\n          field: \"gebyr\",\r\n          sort: \"asc\",\r\n          width: 200,\r\n        },\r\n        {\r\n          label: \"Renter\",\r\n          field: \"renter\",\r\n          sort: \"asc\",\r\n          width: 100,\r\n        },\r\n        {\r\n          label: \"Restgjeld\",\r\n          field: \"restgjeld\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"Terminkostnad\",\r\n          field: \"total\",\r\n          sort: \"asc\",\r\n          width: 100,\r\n        },\r\n      ],\r\n      rows: [\r\n        r\r\n      ]\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <MDBDataTable\r\n          striped\r\n          bordered\r\n          hover\r\n          data={data}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Table3;\r\n"]},"metadata":{},"sourceType":"module"}