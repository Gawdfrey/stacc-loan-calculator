{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\git\\\\nextjs\\\\components\\\\Table.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\n\nvar TableBody = function TableBody(props) {\n  if (props.response == null) {\n    var rows = /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"No values are input yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, _this)\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, _this);\n\n    return {\n      dato: \"hei\"\n    };\n  } else {\n    var _rows = props.response.nedbetalingsplan.innbetalinger.map(function (row, index) {\n      return {\n        dato: row.dato,\n        innbetaling: Math.round(row.innbetaling) + \"  NOK\",\n        gebyr: Math.round(row.gebyr) + \"  NOK\",\n        renter: Math.round(row.renter) + \"  NOK\",\n        restgjeld: Math.round(row.restgjeld) + \"  NOK\",\n        total: Math.round(row.total) + \"  NOK\"\n      };\n    });\n\n    console.log(_rows);\n    return _rows;\n  }\n};\n\n_c = TableBody;\n\nvar Table3 = /*#__PURE__*/function (_Component) {\n  _inherits(Table3, _Component);\n\n  var _super = _createSuper(Table3);\n\n  function Table3() {\n    _classCallCheck(this, Table3);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Table3, [{\n    key: \"render\",\n    value: function render() {\n      var response = this.props.response;\n      var r = {\n        dato: \"hei\"\n      };\n\n      if (response == null) {\n        console.log(\"hey\");\n      } else {\n        t = response.nedbetalingsplan.innbetalinger;\n      }\n\n      var data = {\n        columns: [{\n          label: \"Dato\",\n          field: \"dato\",\n          sort: \"asc\",\n          width: 150\n        }, {\n          label: \"Innbetaling\",\n          field: \"innbetaling\",\n          sort: \"asc\",\n          width: 270\n        }, {\n          label: \"Gebyr\",\n          field: \"gebyr\",\n          sort: \"asc\",\n          width: 200\n        }, {\n          label: \"Renter\",\n          field: \"renter\",\n          sort: \"asc\",\n          width: 100\n        }, {\n          label: \"Restgjeld\",\n          field: \"restgjeld\",\n          sort: \"asc\",\n          width: 150\n        }, {\n          label: \"Terminkostnad\",\n          field: \"total\",\n          sort: \"asc\",\n          width: 100\n        }],\n        rows: [t]\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MDBDataTable, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Table3;\n}(Component);\n\nexport default Table3;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableBody\");","map":{"version":3,"sources":["D:/git/nextjs/components/Table.js"],"names":["React","Component","MDBDataTable","TableBody","props","response","rows","dato","nedbetalingsplan","innbetalinger","map","row","index","innbetaling","Math","round","gebyr","renter","restgjeld","total","console","log","Table3","r","t","data","columns","label","field","sort","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\n\r\nconst TableBody = (props) => {\r\n  if (props.response == null) {\r\n    const rows = (\r\n      <tr key={1}>\r\n        <td>No values are input yet!</td>\r\n      </tr>\r\n    );\r\n    return {\r\n        dato: \"hei\"\r\n    }\r\n  } else {\r\n    const rows = props.response.nedbetalingsplan.innbetalinger.map(\r\n      (row, index) => {\r\n        return (\r\n          {\r\n            dato: row.dato,\r\n            innbetaling: Math.round(row.innbetaling) + \"  NOK\",\r\n            gebyr: Math.round(row.gebyr) + \"  NOK\",\r\n            renter: Math.round(row.renter) + \"  NOK\",\r\n            restgjeld: Math.round(row.restgjeld) + \"  NOK\",\r\n            total: Math.round(row.total) + \"  NOK\"\r\n          }\r\n        );\r\n      }\r\n    );\r\n    console.log(rows)\r\n    return rows\r\n  }\r\n};\r\n\r\nclass Table3 extends Component {\r\n  render() {\r\n    const { response } = this.props;\r\n    const r = {\r\n        dato: \"hei\"\r\n    }\r\n    if (response == null) {\r\n        console.log(\"hey\")\r\n    } else {\r\n        t = response.nedbetalingsplan.innbetalinger\r\n    }\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: \"Dato\",\r\n          field: \"dato\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"Innbetaling\",\r\n          field: \"innbetaling\",\r\n          sort: \"asc\",\r\n          width: 270,\r\n        },\r\n        {\r\n          label: \"Gebyr\",\r\n          field: \"gebyr\",\r\n          sort: \"asc\",\r\n          width: 200,\r\n        },\r\n        {\r\n          label: \"Renter\",\r\n          field: \"renter\",\r\n          sort: \"asc\",\r\n          width: 100,\r\n        },\r\n        {\r\n          label: \"Restgjeld\",\r\n          field: \"restgjeld\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"Terminkostnad\",\r\n          field: \"total\",\r\n          sort: \"asc\",\r\n          width: 100,\r\n        },\r\n      ],\r\n      rows: [\r\n        t\r\n      ]\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <MDBDataTable\r\n          striped\r\n          bordered\r\n          hover\r\n          data={data}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Table3;\r\n"]},"metadata":{},"sourceType":"module"}